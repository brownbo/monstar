<style lang="less" scoped>
.sign-in {
  .placeholder {
    color: #666;
  }
  button[disabled] {
    border-color: #ccc;
  }
  .sign-in-header {
    padding: 40rpx;
    text-align: center;
    font-size: 60rpx;
    font-weight: bold;
    color: #000;
  }
  .sign-in-form {
    padding: 15px 15px 0 15px;
  }
  .sign-in-form-item {
    margin-top: 30rpx;
  }
  .sign-in-forgot {
    display: flex;
    justify-content: space-between;
    padding: 6px;
    font-size: 13px;
  }
  .sign-in-forgot view {
    line-height: 1.5;
  }

  .zan-btn--primary {
    background-color: #ff9900;
    border-color: #ffaa00;
  }
}
</style>

<template>
  <view class="sign-in">
    <view class="sign-in-header">积分商城</view>
    <view class="zan-panel">
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">手机号</view>
        <input type="number" class="zan-cell__bd zan-field__input" placeholder="请输入您的手机号" bindinput="bindPhoneInput"/>
      </view>
      <!-- <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">选择商铺</view>
        <picker bindchange="changeShop" range="{{shops}}" range-key="name" class="zan-cell__bd zan-field__input {{!selectedShop ? 'placeholder' : ''}}">{{shopDisplay}}</picker>
      </view> -->
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">密码</view>
        <input password class="zan-cell__bd zan-field__input" placeholder="请输入登录密码" bindinput="bindPassInput"/>
      </view>
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">验证码</view>
        <input type="number" class="zan-field__input zan-cell__bd" placeholder="请输入验证码" bindinput="bindVcodeInput"/>
        <view class="zan-cell__ft">
          <button class="zan-btn zan-btn--mini zan-btn--warn" bindtap="sendVcode(60)" disabled="{{!showVcode}}">{{countdown >= 0 ? '重新获取(' + countdown + ')':'获取验证码'}}</button>
        </view>
      </view>
    </view>
    <view class="sign-in-form">
      <view class="sign-in-form-item">
        <button class="zan-btn zan-btn--primary" bindtap="submit" disabled="{{!showSubmit}}">登录</button>
      </view>
      <view class="sign-in-forgot">
        <view bindtap="bindForgot">忘记密码？</view>
        <view bindtap="bindSignUp">立即注册</view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from "wepy";
import request from "@/utils/request";
import { api } from "@/config";
export default class extends wepy.component {
  data = {
    countdown: -1,
    phone: "",
    password: "",
    vcode: "",
    shops: [],
    selectedShop: null,
    noShops: false
  };

  computed = {
    showVcode() {
      return this.countdown < 0 && /^1\d{10}$/.test(this.phone);
    },
    showSubmit() {
      return (
        /^1\d{10}$/.test(this.phone) &&
        /^\d{6}$/.test(this.vcode) &&
        !!this.password /*&&
        !!this.selectedShop*/
      );
    },
    shopDisplay() {
      if (this.noShops) {
        return "没有该手机号对应的商铺";
      }
      return !this.selectedShop ? "选择商铺" : this.selectedShop.name;
    }
  };

  methods = {
    changeShop(e) {
      this.selectedShop = this.shops[e.detail.value];
    },
    bindPhoneInput(e) {
      this.phone = e.detail.value;

      // this.noShops = false;
      // this.selectedShop = null;
      // this.shops = [];
      // if (/^1\d{10}$/.test(this.phone)) {
      //   this.fetchShops();
      // }
    },
    bindPassInput(e) {
      this.password = e.detail.value;
    },
    bindVcodeInput(e) {
      this.vcode = e.detail.value;
    },
    sendVcode(sec) {
      this.countdown = ~~sec - 1;
      const timer = setInterval(() => {
        this.countdown = this.countdown - 1;
        this.$apply();
        if (this.countdown < 0) clearInterval(timer);
      }, 1000);
      this.$root.$parent.sendSms(this.phone);
    },
    submit() {
      this.$emit("onSignIn", {
        phone: this.phone,
        password: this.password,
        vcode: this.vcode,
        //merchant_code: this.selectedShop.code
      });
    },
    bindForgot() {
      if (!this.tapForgot) {
        this.$emit("onSwitchForget");
        this.tapForgot = true;
        setTimeout(() => {
          this.tapForgot = false;
        }, 500);
      }
    },
    bindSignUp() {
      this.$emit("onSwitchSign");
    }
  };

  async fetchShops() {
    const data = await request(api.customerList, {
      data: { phone: this.phone }
    });
    this.shops = data.map(_ => ({
      name: _.merchantName,
      code: _.merchantNum
    }));
    this.noShops = this.shops.length === 0;
    this.$apply();
  }
}
</script>
