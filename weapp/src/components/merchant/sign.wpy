<style lang="less" scoped>
.sign-up {
  .sign-up-header {
    padding: 40rpx;
    text-align: center;
    font-size: 60rpx;
    font-weight: bold;
    color: #000;
  }
  .sign-up-form {
    padding: 0 30rpx;
  }
  .sign-up-form-item {
    margin-top: 30rpx;
  }
  .sign-up-input {
    padding: 20rpx 30rpx;
    border: 2rpx solid #bbb;
    color: #333;
    font-size: 32rpx;
  }
  .sign-up-code {
    display: flex;
    align-items: center;
    .sign-up-input {
      flex: 1;
    }
    .sign-up-btn {
      margin-left: 30rpx;
      font-size: 32rpx;
      padding: 20rpx;
      text-align: center;
      min-width: 250rpx;
      line-height: inherit;
    }
  }
}
</style>

<template>
  <view wx:if="{{show}}" class="sign">
    <view class="sign-up" wx:if="{{action === 'signUp'}}">
      <view class="sign-up-header">积分商城</view>
      <view class="sign-up-form">
        <view class="sign-up-form-item">
          <input class="sign-up-input" placeholder="请填写商户名称" bindinput="bindNameInput"/>
        </view>
          <view class="sign-up-form-item">
          <input type="number" class="sign-up-input" bindinput="bindPhoneInput" placeholder="请填写申请预留银行的手机号"/>
        </view>
        <view class="sign-up-form-item">
          <input class="sign-up-input" placeholder="请填写您的商户编号" bindinput="bindCodeInput"/>
        </view>

        <view class="sign-up-form-item sign-up-code">
          <input type="number" class="sign-up-input" placeholder="请输入验证码" bindinput="bindVcodeInput"/>
          <button class="sign-up-btn" bindtap="sendVcode(15)" disabled="{{!showVcode}}">{{countdown >= 0 ? '重新获取(' + countdown + ')':'获取验证码'}}</button>
        </view>
        <view class="sign-up-form-item">
          <input class="sign-up-input" placeholder="请设置登录密码" password bindinput="bindPasswordInput"/>
        </view>
        <view class="sign-up-form-item">
          <button type="primary" class="theme-bg-color-light" bindtap="signUp" disabled="{{!showSubmit}}">注册</button>
        </view>
      </view>
    </view>
    <sign-in wx:else/>
  </view>
</template>

<script>
import wepy from "wepy";
import { api, root } from "@/config";
import request from "@/utils/request";
import { getCookies } from "@/utils/format";
import SignIn from "../auth/sign-in";
export default class extends wepy.component {
  props = {
    action: {
      type: String,
      default: "signUp"
    },
    show: {
      type: Boolean,
      default: false
    }
  };

  data = {
    countdown: -1,
    phone: "",
    password: "",
    vcode: "",
    code: "",
    name: ""
  };

  computed = {
    showVcode() {
      return this.countdown < 0 && /^1\d{10}$/.test(this.phone);
    },
    showSubmit() {
      return (
        /^1\d{10}$/.test(this.phone) &&
        /^\d{6}$/.test(this.vcode) &&
        !!this.password &&
        !!this.code &&
        !!this.name
      );
    }
  };

  methods = {
    bindNameInput(e) {
      this.name = e.detail.value;
    },
    bindPhoneInput(e) {
      this.phone = e.detail.value;
    },
    bindCodeInput(e) {
      this.code = e.detail.value;
    },
    bindVcodeInput(e) {
      this.vcode = e.detail.value;
    },
    bindPasswordInput(e) {
      this.password = e.detail.value;
    },
    sendVcode(sec) {
      this.countdown = ~~sec - 1;
      const timer = setInterval(() => {
        this.countdown = this.countdown - 1;
        this.$apply();
        if (this.countdown < 0) clearInterval(timer);
      }, 1000);
      this.$root.$parent.sendSms(this.phone);
    },
    signUp() {
      this.register({
        phone: this.phone,
        password: this.password,
        merchant_code: this.code,
        name: this.name,
        vcode: this.vcode
      });
    }
  };

  components = {
    "sign-in": SignIn
  };

  watch = {
    show(visible) {
      if (visible) {
        this.updateTitle();
      }
    }
  };

  events = {
    onSignIn(args) {
      this.login(args);
    },
    onSwitchForget() {
      wx.navigateTo({
        url: "/pages/auth/reset?type=2"
      });
    },
    onSwitchSign() {
      this.action = "signUp";
      this.updateTitle();
    }
  };

  async register(args) {
    args.openid = this.$root.$parent.globalData.openid;
    try {
      wx.showLoading({
        title: "正在注册..."
      });

      await request(api.merchantSign, {
        method: "POST",
        data: args
      });
      wx.hideLoading();
      wx.showToast({
        title: "注册成功",
        icon: "success",
        duration: 500
      });
      setTimeout(() => {
        this.action = "signIn";
        this.updateTitle();
        this.$apply();
      }, 500);
    } catch (err) {
      wx.hideLoading();
      wx.showModal({
        showCancel: false,
        title: "提示",
        content: err.message
      });
    }
  }

  async login(args) {
    try {
      wx.showLoading({
        title: "正在登录..."
      });

      const { header, data: merchant } = await request(
        api.merchantLogin,
        {
          method: "POST",
          data: {
            phone: args.phone,
            password: args.password,
            merchant_code: args.merchant_code,
            openid: this.$root.$parent.globalData.openid,
            vcode: args.vcode
          }
        },
        false
      );

      const globalData = this.$root.$parent.globalData;
      let cookies = getCookies(header["Set-Cookie"] || header["set-cookie"]);
      this.$root.$parent.changeRole("merchant");
      this.$root.$parent.storeCookies(cookies);
      wx.reLaunch({
        url: "/pages/merchant/index"
      });
    } catch (err) {
      wx.showModal({
        showCancel: false,
        title: "提示",
        content: err.message
      });
    } finally {
      wx.hideLoading();
    }
  }

  updateTitle() {
    wx.setNavigationBarTitle({
      title: this.action === "signUp" ? "商户注册" : "登录"
    });
  }
}
</script>
