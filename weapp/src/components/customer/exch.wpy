<style scoped>
.harf-container {
  background: #fff;
  height: 65px;
  display: flex;
  align-items: center;
}
.half {
  flex: 1;
  text-align: center;
}
.half .half-title {
  font-size: 13px;
  color: #555;
  margin-bottom: 5px;
}
.half .half-bottom {
  font-size: 17px;
  color: #333;
}
.primary-color {
  color: #f90 !important;
}

.m-t-1 {
  margin-top: 10px;
}

.zan-tab__title {
  margin: 0;
  width: 80%;
}

.zan-tab__item--selected .zan-tab__title {
  border-color: #f60;
  color: #f60;
}

.exch-merchant {
  padding: 30rpx 0 30rpx 30rpx;
  border-bottom: 0.5px solid #e5e5e5;
  background: #fff;
}

.exch-gift {
  padding: 30rpx;
  border-bottom: 0.5px solid #e5e5e5;
  background: #fff;
}

.tab-placeholder {
  height: 45px;
  position: relative;
}

.tab-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
}
.fixed {
  position: fixed !important;
}
.no-auth {
}
</style>

<template>
  <view>
    <view class="harf-container">
      <view class="half">
        <view class="half-title">总积分</view>
        <view class="half-bottom">{{total_points}}</view>
      </view>
      <view class="half">
        <view class="half-title">可兑换积分</view>
        <view class="half-bottom primary-color">{{exch_points}}</view>
      </view>
    </view>
    <view class="tab-placeholder m-t-1">
      <view class="zan-tab tab-wrapper {{tabFixed ? 'fixed' : ''}}">
        <view class="zan-tab__bd">
          <view @tap="changeType(gift)" class="zan-tab__item {{type === 'gift' ? 'zan-tab__item--selected' : ''}}">
            <view class="zan-tab__title">我可以兑换的礼品</view>
          </view>
          <view @tap="changeType(merchant)" class="zan-tab__item {{type === 'merchant' ? 'zan-tab__item--selected' : ''}}">
            <view class="zan-tab__title">我可以兑换的商户</view>
          </view>
        </view>
      </view>
    </view>
    <block wx:if="{{type === 'gift'}}">
      <repeat for="{{gifts}}" key="index" index="index" item="item">
        <navigator hover-class="none" url="/pages/customer/gift-goods?type={{type}}&id={{item.id}}">
          <gift class="exch-gift" :item="item"/>
        </navigator>
      </repeat>
    </block>
    <block wx:else>
      <repeat for="{{merchants}}" key="index" index="index" item="item">
        <navigator hover-class="none" url="/pages/customer/merchant?id={{item.id}}">
          <merchant class="exch-merchant" :item="item"/>            
        </navigator>
      </repeat>
    </block>
    <view hidden="{{!noData}}" class="zan-loadmore zan-loadmore--nodata">
      <view class="zan-loadmore__tips">暂无数据</view>
    </view>
  </view>
</template>

<script>
import wepy from "wepy";
import Goods from "./goods";
import Merchant from "./merchant";
import { api, root } from "@/config";
import request from "@/utils/request";
export default class extends wepy.component {
  components = {
    gift: Goods,
    merchant: Merchant
  };
  data = {
    hasShown: false,
    total_points: 0,
    exch_points: 0,
    type: "gift",
    page: 1,
    noMore: false,
    noData: false,
    gifts: [],
    merchants: [],
    tabFixed: false
  };

  limit = 5;

  methods = {
    changeType(type) {
      this.type = type;
      setTimeout(() => {
        this.reset();
        this.fetchData();
      }, 0);
    }
  };

  onPageScroll(scrollTop) {
    if (this.tabFixed !== scrollTop >= 75) {
      this.tabFixed = !this.tabFixed;
      this.$apply();
    }
  }

  onShow() {
    const { customer } = this.$root.$parent.globalData;
    if (!!customer) {
      this.total_points = customer.total_points;
      this.exch_points = customer.exch_points;
      this.$apply();

      if (!this.hasShown) {
        this.hasShown = true;
        this.fetchData();
      }
    }
  }

  onReachBottom() {
    if (!this.noData && !this.noMore) {
      setTimeout(() => {
        this.page++;
        this.fetchData();
      }, 0);
    }
  }

  reset() {
    this.page = 1;
    this.noMore = this.noData = false;
    this.gifts = [];
    this.merchants = [];
  }

  fetchData() {
    this.type === "gift" ? this.fetchGifts() : this.fetchMerchants();
  }

  async fetchGifts() {
    const { customer } = this.$root.$parent.globalData;
    let data = await request(api.gifts, {
      data: {
        limit: this.limit,
        page: this.page,
        availableGifts: true,
        order: "exch_points DESC",
        mypoints: ~~customer.exch_points + 1,
        examine_status: 3,
        enabled: 1
      }
    });
    data.forEach(item => {
      if (!!item.activity && item.activity.enabled) {
        item.price = item.activity.price;
        item.exch_points = item.activity.exch_points;
        item.pay_type = item.activity.pay_type;
      }

      if (!!item.imgs) {
        item.preview = root + item.imgs.split(",")[0];
      }
      item.amount = item.price;
      item.price = (item.price / 100).toFixed(2);
      item.points = item.exch_points;
    });

    if (data.length === 0) {
      this.page === 1 ? (this.noData = true) : (this.noMore = true);
    } else if (data.length < this.limit) {
      this.noMore = true;
    }
    this.gifts = this.gifts.concat(data);
    this.$apply();
  }

  async fetchMerchants() {
    const { customer, location } = this.$root.$parent.globalData;
    const queries = {
      availableShops: true,
      mypoints: customer.exch_points,
      limit: this.limit,
      page: this.page,
      examine_status: 3,
      enabled: 1,
      status: 1
    };
    if (location) {
      queries.lat = location.lat;
      queries.long = location.long;
    }
    let data = await request(api.shops, {
      data: queries
    });

    data.forEach(item => {
      if (!!item.shop_img) {
        item.shop_img = item.shop_img.split(",").map(_ => root + _);
        item.preview = item.shop_img[0];
      }
      item.voucher = (item.voucher && item.voucher.name) || "";
    });

    if (data.length === 0) {
      this.page === 1 ? (this.noData = true) : (this.noMore = true);
    } else if (data.length < this.limit) {
      this.noMore = true;
    }
    this.merchants = this.merchants.concat(data);
    this.$apply();
  }
}
</script>
