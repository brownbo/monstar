 <style lang="less" scoped>
.sign-up {
  .sign-up-header {
    padding: 40rpx;
    text-align: center;
    font-size: 60rpx;
    font-weight: bold;
    color: #000;
  }
  .sign-up-form {
    padding: 15px 15px 0 15px;
  }
  .sign-up-form-item {
    margin-top: 30rpx;
  }
  .zan-btn--primary {
    background-color: #ff9900;
    border-color: #ffaa00;
  }
  .placeholder {
    color: #666;
  }
  button[disabled] {
    border-color: #ccc;
  }
}
</style>

<template>
  <view wx:if="{{show}}" class="sign">
    <view class="sign-up" wx:if="{{action === 'signUp'}}">
        <view class="sign-up-header">积分商城</view>
        <view class="zan-panel">
          <view class="zan-cell zan-field">
            <view class="zan-cell__hd zan-field__title">客户身份</view>
            <picker bindchange="changeRole" range="{{roles}}" range-key="name" class="zan-cell__bd zan-field__input {{!selectedRole ? 'placeholder' : ''}}">{{!selectedRole ? "选择注册身份" : selectedRole.name}}</picker>
          </view>
          <view class="zan-cell zan-field">
            <view class="zan-cell__hd zan-field__title">姓名</view>
            <input class="zan-cell__bd zan-field__input" placeholder="请填写您的名字" bindinput="bindNameInput"/>
          </view> 
          <view class="zan-cell zan-field">
            <view class="zan-cell__hd zan-field__title">手机号</view>
            <input type="number" class="zan-cell__bd zan-field__input" placeholder="请填写银行注册时的手机号" bindinput="bindPhoneInput"/>
          </view> 
          <view class="zan-cell zan-field" hidden="{{!selectedRole || selectedRole.value === 1}}">
            <view class="zan-cell__hd zan-field__title">商户编号</view>
            <input type="number" class="zan-cell__bd zan-field__input" placeholder="请填写您的商户编码" bindinput="bindIdInput"/>
          </view> 
          <view class="zan-cell zan-field" hidden="{{!selectedRole || selectedRole.value === 2}}">
            <picker bindchange="bindIdTypeChange" range="{{idTypes}}" class="zan-cell__hd zan-field__title">{{idTypes[idIndex]}}</picker>
            <input type="number" class="zan-cell__bd zan-field__input" placeholder="请填写银行注册时的证件号码" bindinput="bindIdInput"/>
          </view>
          <view class="zan-cell zan-field">
            <view class="zan-cell__hd zan-field__title">验证码</view>
            <input type="number" class="zan-field__input zan-cell__bd" placeholder="请输入验证码" bindinput="bindVcodeInput"/>
            <view class="zan-cell__ft">
              <button class="zan-btn zan-btn--mini zan-btn--warn" bindtap="sendVcode(60)" disabled="{{!showVcode}}">{{countdown >= 0 ? '重新获取(' + countdown + ')':'获取验证码'}}</button>
            </view>
          </view> 
          <view class="zan-cell zan-field">
            <view class="zan-cell__hd zan-field__title">密码</view>
            <input password class="zan-cell__bd zan-field__input" placeholder="请设置登录密码" bindinput="bindPasswordInput"/>
          </view>    
        </view>
        <view class="sign-up-form">
          <view class="sign-up-form-item">
            <button class="zan-btn zan-btn--primary" bindtap="signUp" disabled="{{!showSubmit}}">注册</button>
          </view>
        </view>   
    </view>
    <sign-in wx:else/>
  </view>
</template>

<script>
import wepy from "wepy";
import { api, root } from "@/config";
import request from "@/utils/request";
import { getCookies } from "@/utils/format";
import SignIn from "./sign-in";
export default class extends wepy.component {
  props = {
    action: {
      type: String,
      default: "signUp"
    },
    show: {
      type: Boolean,
      default: false
    }
  };

  data = {
    roles: [{ name: "普通客户", value: 1 }, { name: "POS商户", value: 2 }],
    selectedRole: null,
    idTypes: ["身份证", "护照", "军官证"],
    idIndex: 0,
    countdown: -1,
    phone: "",
    password: "",
    vcode: "",
    id: "",
    username: "",
    name: ""
  };

  computed = {
    showVcode() {
      return this.countdown < 0 && /^1\d{10}$/.test(this.phone);
    },
    showSubmit() {
      return (
        /^1\d{10}$/.test(this.phone) &&
        /^\d{6}$/.test(this.vcode) &&
        !!this.password &&
        //  !!this.username &&
        !!this.name &&
        !!this.id &&
        !!this.selectedRole
      );
    }
  };

  components = {
    "sign-in": SignIn
  };

  watch = {
    show(visible) {
      if (visible) this.updateTitle();
    }
  };

  methods = {
    changeRole(e) {
      this.selectedRole = this.roles[e.detail.value];
      this.id = "";
    },
    bindIdTypeChange(e) {
      this.idIndex = e.detail.value;
    },
    bindNameInput(e) {
      this.name = e.detail.value;
    },
    bindUsernameInput(e) {
      this.username = e.detail.value;
    },
    bindPhoneInput(e) {
      this.phone = e.detail.value;
    },
    bindIdInput(e) {
      this.id = e.detail.value;
    },
    bindVcodeInput(e) {
      this.vcode = e.detail.value;
    },
    bindPasswordInput(e) {
      this.password = e.detail.value;
    },
    sendVcode(sec) {
      this.countdown = ~~sec - 1;
      const timer = setInterval(() => {
        this.countdown = this.countdown - 1;
        this.$apply();
        if (this.countdown < 0) clearInterval(timer);
      }, 1000);
      this.$root.$parent.sendSms(this.phone);
    },
    signUp() {
      this.register({
        phone: this.phone,
        password: this.password,
        certificate_code: this.id,
        merchant_code: this.id,
        name: this.name,
        username: this.username,
        user_type: this.selectedRole.value,
        vcode: this.vcode
      });
    }
  };

  events = {
    // 登录
    onSignIn(args) {
      this.login(args);
    },
    onSwitchForget() {
      wx.navigateTo({
        url: "/pages/auth/reset?type=1"
      });
    },
    onSwitchSign() {
      this.action = "signUp";
      this.updateTitle();
    }
  };

  async register(args) {
    args.openid = this.$root.$parent.globalData.openid;
    try {
      wx.showLoading({
        title: "正在注册..."
      });

      await request(api.customerSign, {
        method: "POST",
        data: args
      });
      wx.hideLoading();
      wx.showToast({
        title: "注册成功",
        icon: "success",
        duration: 500
      });
      setTimeout(() => {
        this.action = "signIn";
        this.updateTitle();
        this.$apply();
      }, 500);
    } catch (err) {
      wx.hideLoading();
      wx.showModal({
        showCancel: false,
        title: "提示",
        content: err.message
      });
    }
  }
  async login(args) {
    try {
      wx.showLoading({
        title: "正在登录..."
      });

      const { header, data: customer } = await request(
        api.customerLogin,
        {
          method: "POST",
          data: {
            phone: args.phone,
            password: args.password,
            openid: this.$root.$parent.globalData.openid,
            user_type: args.user_type,
            merchant_code: args.merchant_code,
            vcode: args.vcode
          }
        },
        false
      );

      const globalData = this.$root.$parent.globalData;
      let cookies = getCookies(header["Set-Cookie"] || header["set-cookie"]);
      this.$root.$parent.changeRole("customer");
      this.$root.$parent.storeCookies(cookies);
      wx.reLaunch({
        url: "/pages/customer/index"
      });
    } catch (err) {
      wx.showModal({
        showCancel: false,
        title: "提示",
        content: err.message
      });
    } finally {
      wx.hideLoading();
    }
  }

  updateTitle() {
    wx.setNavigationBarTitle({
      title: this.action === "signUp" ? "客户注册" : "登录"
    });
  }
}
</script>