<style lang="less">
.page {
  padding-bottom: 30rpx;
}
.header {
  padding: 20rpx 30rpx;
  background-color: #fff;
  display: flex;
  align-items: center;
  .scan {
    .scan-icon {
      width: 48rpx;
      height: 48rpx;
      margin: 0 auto;
      display: block;
    }
    .scan-label {
      text-align: center;
      font-size: 24rpx;
      color: #333;
    }
  }
  .search {
    flex: 1;
  }

  .sider {
    margin-left: 40rpx;
  }
}

.banner {
  height: 56.25vw;
  .banner-img {
    width: 100%;
    height: 100%;
  }
}

.categories {
  display: flex;
  padding: 20rpx 0;
  .category {
    text-align: center;
    width: 25%;
    .category-icon {
      margin: 0 auto;
      height: 64rpx;
      width: 64rpx;
      display: block;
    }
    .category-label {
      margin-top: 10rpx;
      text-align: center;
      font-size: 24rpx;
      color: #888;
    }
  }
}

.recommend {
  .recommend-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .recommend-goods-list {
    width: 100%;
    .recommend-goods-wrapper {
      width: 50%;
      display: inline-block;
      .recommend-goods {
        padding: 30rpx;
      }
    }
  }
  .recommend-merchant {
    padding: 30rpx 0 30rpx 30rpx;
    border-bottom: 1rpx solid #e5e5e5;
  }
  .distances {
    padding: 10rpx 0 10rpx 30rpx;
    background-color: #fff;
    .distance {
      margin-right: 20rpx;
    }
  }
}

.searchbar {
  padding: 8rpx 36rpx;
  border: 1rpx solid #bbb;
  border-radius: 40rpx;
  font-size: 30rpx;
  color: #555;
  display: flex;
  align-items: center;
  .search-icon {
    width: 48rpx;
    height: 48rpx;
    margin-right: 10rpx;
  }
}
</style>

<template>
  <view class="page">
    <view class="header">
      <view class="scan" @tap="scan">
        <image class="scan-icon" src="/images/scan.png"/>
        <view class="scan-label">扫一扫</view>
      </view>
      <view hover-class="none" @tap="onSearch" class="search theme-seperator-3 searchbar">
        <image class="search-icon" src="/images/search.png"/>
        <text>搜索商品/礼品</text>
      </view>
      <navigator wx:if="{{!hasLogin}}" class="theme-seperator-3" hover-class="none" url="/pages/auth/sign?action=signIn">登录</navigator>
      <navigator wx:if="{{!hasLogin}}" class="theme-seperator-1" hover-class="none" url="/pages/auth/sign?action=signUp">注册</navigator>
    </view>

    <swiper wx:if="{{banners.length > 0}}" class="banner" autoplay="true" circular="true" indicator-dots="true" indicator-color="#f8f8f8" indicator-active-color="#f8a312">
      <repeat for="{{banners}}" key="index" index="index" item="item">
        <swiper-item>
          <image src="{{item.img}}" class="banner-img" @tap="viewBanner({{item.url}})"/>
        </swiper-item>
      </repeat>
    </swiper>
    <placeholder wx:else/>

    <view class="categories theme-bg-white">
      <repeat for="{{categories}}" key="index" index="index" item="item">
        <view @tap="viewCategory({{index}})" class="category">
          <image class="category-icon" src="{{item.icon}}" />
          <view class="category-label">{{item.label}}</view>
        </view>
      </repeat>
    </view>

    <view class="my-points theme-divider-3 theme-container theme-typo-middle">
      <text>我的积分：</text>
      <text class="theme-seperator-4">当前可用积分</text>
      <text class="theme-seperator-1 theme-color">{{availablePoints}}</text>
      <text class="theme-seperator-4">总积分</text>
      <text class="theme-seperator-1 theme-color">{{totalPoints}}</text>
    </view>

    <view class="recommend theme-divider-3">
      <view class="recommend-header theme-container">
        <view class="theme-color theme-typo-normal">推荐商品</view>
        <navigator hover-class="none" url="/pages/customer/gift-goods-list?type=goods" class="theme-typo-middle">更多</navigator>
      </view>
      <view class="recommend-goods-list theme-bg-white">
        <repeat for="{{recommendGoods}}" key="index" index="index" item="item">
          <navigator hover-class="none" class="recommend-goods-wrapper" url="/pages/customer/gift-goods?type=goods&id={{item.id}}">
            <goods class="recommend-goods vertical" :item="item"/>
          </navigator>
        </repeat>
      </view>
    </view>

    <view class="recommend theme-divider-3">
      <view class="recommend-header theme-container ">
        <view class="theme-typo-normal theme-color">推荐商户</view>
        <navigator hover-class="none" url="/pages/customer/merchants" class="theme-typo-middle">更多</navigator>
      </view>
      <view class="theme-typo-small distances">
        <text>附近（智能范围）：</text>
        <repeat for="{{distances}}" key="index" index="index" item="item">
          <text class="distance {{item === activeDistance ? 'theme-color': ''}}" bindtap="changeDistance({{item}})">{{item}}米</text>
        </repeat>
      </view>
      <view class="recommend-merchants theme-bg-white">
        <repeat for="{{recommendMerchants}}" key="index" index="index" item="item">
          <view @tap="viewShop({{index}})">
            <merchant class="recommend-merchant" :item="item"/>
          </view>
        </repeat>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from "wepy";
import Goods from "./goods";
import Merchant from "./merchant";
import { api, root } from "@/config";
import request from "@/utils/request";
export default class extends wepy.component {
  components = {
    goods: Goods,
    merchant: Merchant
  };

  data = {
    banners: wx.getStorageSync("customer#banners") || ["", "", ""],
    categories: [
      {
        icon: "/images/customer/liping.png",
        label: "礼品",
        url: "/pages/customer/gifts"
      },
      {
        icon: "/images/customer/shanghu.png",
        label: "商户",
        url: "/pages/customer/merchants"
      },
      {
        icon: "/images/customer/huodong.png",
        label: "活动",
        url: "/pages/customer/activity"
      },
      {
        icon: "/images/customer/shanghushenqing.png",
        label: "商户申请",
        url: "/pages/merchant/notice"
        /*  requireAuthentication: true*/
      }
    ],
    availablePoints: 0,
    totalPoints: 0,
    // distances: [500, 1000, 2000, 5000],
    distances: [1000, 5000],
    activeDistance: 5000,
    recommendGoods: ["", ""],
    recommendMerchants: [""],
    hasShown: false,
    hasLogin: false
  };

  methods = {
    onSearch() {
      this.$root.$preload({
        onSearch: function() {
          const {
            doSearch,
            searchKeywords: { type, keywords }
          } = this.$root.$parent.globalData;
          if (doSearch) {
            this.$root.$redirect(
              "/pages/customer/gift-goods-list?type=" +
                type +
                "&keywords=" +
                keywords
            );
            this.$root.$parent.globalData.doSearch = false;
          }
        }
      });
      this.$root.$navigate("/pages/common/search?type=goods,gift");
    },
    viewCategory(index) {
      const category = this.categories[index];
      if (
        category.requireAuthentication &&
        !this.$root.$parent.globalData.customer
      ) {
        this.$root.$navigate("/pages/auth/sign?action=signIn&role=customer");
      } else {
        this.$root.$navigate(category.url);
      }
    },
    scan() {
      wx.scanCode({
        success: res => {
          wx.showToast({
            title: res.result
          });
        }
      });
    },
    changeDistance(distance) {
      this.activeDistance = distance;
    },
    viewShop(index) {
      const shop = this.recommendMerchants[index];
      this.$root.$preload(shop);
      this.$root.$navigate(
        "/pages/customer/merchant?id=" + shop.id + "&name=" + shop.name
      );
    },
    viewBanner(url) {
      this.$root.$navigate(url);
    }
  };

  events = {
    location: loc => {
      setTimeout(() => {
        this.fetchRecommendMerchants();
      }, 500);
    }
  };

  watch = {
    activeDistance(distance) {
      this.fetchRecommendMerchants();
    }
  };

  onShow() {
    const { customer } = this.$root.$parent.globalData;
    if (!!customer) {
      this.hasLogin = true;
      this.availablePoints = customer.exch_points;
      this.totalPoints = customer.total_points;
      this.$apply();
    } else {
      this.hasLogin = false;
      this.availablePoints = 0;
      this.totalPoints = 0;
      this.$apply();
    }

    if (!this.hasShown) {
      this.hasShown = true;
      this.fetchBanners();
      this.fetchRecommendGoods();
      this.fetchRecommendMerchants();
    }
  }

  bannerUrls = [
    "/pages/customer/gift-goods?id={{id}}&type=gift",
    "/pages/customer/gift-goods?id={{id}}&type=goods",
    "/pages/customer/voucher?id={{id}}",
    "/pages/customer/merchant?id={{id}}",
    "/pages/customer/recommend?id={{id}}&name=产品推荐"
  ];

  async fetchBanners() {
    const banners = await request(api.banners, {
      data: {
        status: 1
      }
    });
    this.banners = banners.map(banner => {
      return {
        img: root + banner.img,
        url: this.bannerUrls[banner.type].replace("{{id}}", banner.url)
      };
    });
    this.$apply();
    // 缓存 banner
    wx.setStorage({
      key: "customer#banners",
      data: this.banners
    });
  }

  async fetchRecommendGoods() {
    const goods = await request(api.goods, {
      data: {
        is_recommend: 1,
        examine_status: 3,
        enabled: 1,
        include: "activity"
      }
    });
    goods.forEach(_goods => {
      if (!!_goods.previews)
        _goods.preview = root + _goods.previews.split(",")[0];

      if (!!_goods.activity && _goods.activity.enabled) {
        _goods.price = _goods.activity.price;
        _goods.exch_points = _goods.activity.exch_points;
        _goods.pay_type = _goods.activity.pay_type;
      }

      _goods.amount = _goods.price;
      _goods.points = _goods.exch_points;
      _goods.price = (_goods.amount / 100).toFixed(2);
    });
    this.recommendGoods = goods;
    this.$apply();
  }

  async fetchRecommendMerchants() {
    const queries = {
      is_recommend: 1,
      distance: this.activeDistance,
      examine_status: 3,
      enabled: 1,
      status: 1,
      include: "voucher",
      _group: "shop.id"
    };
    const { location } = this.$root.$parent.globalData;
    if (location) {
      queries.lat = location.lat;
      queries.long = location.long;
    }
    const merchants = await request(api.shops, {
      data: queries
    });
    merchants.forEach(merchant => {
      if (!!merchant.shop_img) {
        merchant.shop_img = merchant.shop_img.split(",").map(_ => root + _);
        merchant.preview = merchant.shop_img[0];
      }
      merchant.voucher = (merchant.voucher && merchant.voucher.name) || "";
    });
    this.recommendMerchants = merchants;
    this.$apply();
  }
}
</script>
