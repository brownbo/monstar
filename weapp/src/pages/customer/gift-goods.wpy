<style>
.gift {
  padding-bottom: 72px;
}
.gift-banners {
  height: 100vw;
}

.gift-banner {
  width: 100%;
  height: 100%;
}

.gift-goods-panel {
  background: #fff;
  margin-top: 30rpx;
  border-top: 0.5px solid #e5e5e5;
  border-bottom: 0.5px solid #e5e5e5;
}

.panel-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20rpx 30rpx;
  font-weight: bolder;
  color: #333;
}

.panel-header--title {
  font-weight: bolder;
  font-size: 32rpx;
  color: #333;
  border-left: 3px solid #ffcc00;
  margin: 20rpx;
  padding-left: 4px;
  line-height: 1;
}

.panel-detail {
  padding: 12rpx 30rpx;
  font-size: 28rpx;
  color: #555;
  line-height: 1.5;
}

.header-primary {
  font-size: 32rpx;
  color: #ffcc00;
}

.primay-color-light {
  font-weight: normal;
  color: #ffcc00;
  font-size: 30rpx;
}

.zan-tag + .zan-tag {
  margin-left: 10px;
}

.more {
  font-size: 28rpx;
  color: #555;
}
.eval-cell {
  border-top: 0.5px solid #e5e5e5;
}

.eval-cell {
  padding: 12px 15px;
  line-height: 1.4;
  font-size: 14px;
}

.eval-cell__bd {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.eval-cell__ft {
  font-size: 13px;
  margin-top: 10rpx;
  color: #555;
}

.gift-goods-footer {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  background: #fff;
  display: flex;
  align-items: stretch;
}

.gift-goods-footer-left {
  color: #333;
  text-align: center;
  font-size: 14px;
  flex: 3;
  border-top: 0.5px solid #ddd;
  display: flex;
  justify-content: flex-end;
  flex-direction: column;
  text-align: center;
}

.m-r-3 {
  margin-right: 30rpx;
}

.gift-goods-footer-right {
  flex: 2;
}
.goods-panel-detail {
  padding: 10rpx;
  font-size: 0;
}
.gift-goods-detail {
  width: 100%;
  height: auto;
}
.zan-btn--primary {
  background-color: #f90 !important;
  border-color: #fc0 !important;
}
.gift-goods-recommend {
  display: flex;
}
.gift-goods-recommend .recommend {
  width: 50%;
}

.recommend-wrapper {
  padding: 0 20rpx;
}

.preview {
  width: 100%;
  height: 100%;
}

.preview-wrapper {
  width: 100%;
  height: auto;
  display: flex;
  align-items: center;
  justify-content: center;
}
.center {
  margin-top: 10rpx;
  text-align: center;
  font-size: 26rpx;
  color: #555;
}
.view-more-evals {
  margin: 0 15px 10px 15px;
  color: #333;
  background: #fff;
  font-size: 13px;
  height: 32px;
  line-height: 30px;
  text-align: center;
  border-radius: 2px;
  border: 0.5px solid #ccc;
}

.points {
  color: #f8a312;
  font-size: 20px;
}
.points:after {
  content: "积分";
  margin-left: 3px;
  font-size: 14px;
}
.price {
  color: #f44;
  font-size: 20px;
}
.price:before {
  content: "¥";
  margin-right: 2px;
  font-size: 14px;
}
.price + .points:before {
  color: #444;
  content: "+";
  margin: 0 4px;
}

.line-through {
  color: #888;
  text-decoration: line-through;
  font-size: 12px;
}

.line-through-price + .line-through-points:before {
  content: "+";
  margin: 0 2px;
}
</style>
<template>
  <view class="gift">
    <swiper wx:if="{{banners.length > 0}}" class="gift-banners" autoplay="true" circular="true" indicator-dots="{{banners.length > 1}}" indicator-color="#f8f8f8" indicator-active-color="#f8a312">
      <repeat for="{{banners}}" key="index" index="index" item="item">
        <swiper-item>
          <image src="{{item}}" class="gift-banner"/>
        </swiper-item>
      </repeat>  
    </swiper>
    <view class="gift-goods-panel" wx:if="{{recommend.length > 0}}">
      <view class="panel-header">
        <view class="header-primary">银行产品推荐</view>
        <view class="more">更多</view>
      </view>
      <view class="panel-detail gift-goods-recommend">
        <repeat for="{{recommend}}">
          <view @tap="viewRecommend({{index}})" class="recommend">
            <view class="recommend-wrapper">
              <view class="preview-wrapper">
                <image mode="widthFix" class="preview" src="{{item.previews[0]}}"/> 
              </view>
              <view class="center">{{item.name}}</view>
            </view>  
          </view>
        </repeat>
      </view>
    </view>
    <view class="gift-goods-panel">
      <view class="panel-header--title">{{typeDesc}}概要</view>
      <view class="panel-detail">
        <view>{{typeDesc}}名称：{{name}}</view>
        <view>{{typeDesc}}分类：{{_type}}</view>
        <view>{{typeDesc}}品牌：{{brand}}</view>
      </view>
    </view>
    <view class="gift-goods-panel">
      <view class="panel-header--title">{{typeDesc}}详情</view>
      <view wx:if="{{type === 'gift'}}" class="panel-detail">{{desc}}</view>
      <view wx:else class="goods-panel-detail">
        <repeat for="{{desc}}">
          <image mode="widthFix" class="gift-goods-detail" src="{{item}}"/>
        </repeat>
      </view>
    </view>
    <view class="gift-goods-panel">
      <view class="panel-header--title">{{typeDesc}}评价 <text class="primay-color-light">({{eval_count}}人评价)</text></view>
      <view class="zan-cell zan-cell--last-child">
        <repeat for="{{tags}}">
          <view class="zan-tag zan-tag--warn">{{item}}</view>
        </repeat>
      </view>
      <repeat for="{{evals}}">
        <view class="eval-cell">
          <view class="eval-cell__bd">
            <view class="zan-cell__text">{{item.customer}}</view>
            <view class="zan-cell__desc">{{item.date}}</view>
          </view>  
          <view class="eval-cell__ft">{{item.eval}}</view>
        </view>
      </repeat>
      <navigator hover-class="none" url="/pages/customer/evals?type={{type}}&id={{id}}" class="view-more-evals"  wx:if="{{eval_count > eval_limit}}">查看全部评价</navigator>
    </view>
    <view class="gift-goods-footer">
      <view class="gift-goods-footer-left">
        <view style="flex: 1;display: flex; align-items: center;">
          <view style="margin: 0 auto;">
            <text wx:if="{{payType !== 0}}" class="price">{{price}}</text>
            <text wx:if="{{payType !== 1}}" class="points">{{points}}</text>
          </view>
        </view>
        <view class="line-through" wx:if="{{is_active}}">
          <text wx:if="{{line_payType !== 0}}" class="line-through-price">¥{{line_price}}</text>
          <text wx:if="{{line_payType !== 1}}" class="line-through-points">{{line_points}}积分</text>
        </view>
      </view>  
      <view class="gift-goods-footer-right">
        <button @tap="confirm" class="zan-btn zan-btn--large zan-btn--primary" disabled="{{!showConfirm || !hasStock}}">{{showConfirm ? (hasStock ?'立即兑换':'暂无库存') : '积分不足'}}</button>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from "wepy";
import { api, root } from "@/config";
import request from "@/utils/request";
import { getLocaleDateString } from "@/utils/format";
export default class extends wepy.page {
  config = {
    navigationBarTitleText: "礼品详情"
  };

  data = {
    type: "gift",
    is_active: false,
    id: "",
    payType: 0,
    line_payType: 0,
    banners: [""],
    price: 0,
    line_price: 0,
    line_points: 0,
    points: 0,
    desc: "",
    name: "",
    _type: "",
    brand: "",
    eval_count: 0,
    eval_limit: 2,
    tags: [] || ["不错", "可以"],
    evals: [],
    recommend: [],

    hasStock: true
  };

  typeMapping = {
    gift: "礼品",
    goods: "商品"
  };

  computed = {
    typeDesc() {
      return this.typeMapping[this.type];
    },
    showConfirm() {
      const { customer } = this.$parent.globalData;
      return (
        !customer || this.payType === 1 || this.points <= customer.exch_points
      );
    }
  };

  methods = {
    viewRecommend(index) {
      const data = this.recommend[index];
      this.$preload(data);
      this.$navigate(
        "/pages/customer/recommend?id=" + data.id + "&name=" + data.name
      );
    },
    confirm() {
      if (!this.$parent.globalData.customer) {
        return wx.showModal({
          title: "提示",
          content: "你当前尚未登录，是否立即登录？",
          success: res => {
            if (res.confirm)
              this.$navigate("/pages/auth/sign?action=signIn&role=customer");
          }
        });
      }
      this.$preload({
        name: this.name,
        brand: this.brand,
        price: this.price,
        amount: this.amount,
        points: this.points,
        payType: this.payType
      });
      this.$navigate(
        "/pages/customer/exch?type=" + this.type + "&id=" + this.id
      );
    }
  };

  onLoad({ type, id }) {
    if (type === "goods") {
      this.type = "goods";
      wx.setNavigationBarTitle({ title: "商品详情" });
      this.fetchGoods(id);
      this.fetchGoodsEvals(id);
    } else {
      this.fetchGift(id);
      this.fetchRecommend();
      this.fetchGiftEvals(id);
    }
  }

  async fetchGoods(id) {
    const goods = await request(api.goods + "/" + id, {
      data: { include: "activity", stock: true }
    });

    this.hasStock = goods.stock.stock > 0;

    if (!!goods.activity && goods.activity.enabled) {
      this.is_active = true;
      this.line_payType = goods.pay_type;
      this.line_price = (goods.price / 100).toFixed(2);
      this.line_points = goods.exch_points;
      goods.price = goods.activity.price;
      goods.exch_points = goods.activity.exch_points;
      goods.pay_type = goods.activity.pay_type;
    }

    goods.amount = goods.price;
    this.banners = goods.previews.split(",").map(item => root + item);
    this.payType = goods.pay_type;
    this.id = goods.id;
    this.name = goods.name;
    this._type = "无";
    this.brand = "无";
    this.amount = goods.amount;
    this.price = (goods.amount / 100).toFixed(2);
    this.points = goods.exch_points;
    this.desc = (goods.goods_detail || "").split(",").map(item => root + item);
    this.$apply();
  }

  async fetchGift(id) {
    const gift = await request(api.gift.replace(":id", id), {
      data: {
        include: "gift_type,activity",
        stock: true
      }
    });

    this.hasStock = gift.stock.stock > 0;

    if (!!gift.activity && gift.activity.enabled) {
      this.is_active = true;
      this.line_payType = gift.pay_type;
      this.line_price = (gift.price / 100).toFixed(2);
      this.line_points = gift.exch_points;
      gift.price = gift.activity.price;
      gift.exch_points = gift.activity.exch_points;
      gift.pay_type = gift.activity.pay_type;
    }

    gift.amount = gift.price;
    this.id = gift.id;
    this.payType = gift.pay_type;
    this.banners = gift.imgs.split(",").map(item => root + item);
    this.name = gift.name;
    this._type = gift.gift_type.name;
    this.brand = gift.brand;
    this.desc = gift.desc;
    this.amount = gift.amount;
    this.price = (gift.amount / 100).toFixed(2);
    this.points = gift.exch_points;
    this.$apply();
  }

  async fetchGiftEvals(id) {
    const { count, rows: evals } = await request(api.giftEvals, {
      data: {
        count: true,
        gift_id: id,
        include: "eval_customer",
        is_first_eval: 1,
        limit: this.eval_limit,
        order: "eval_time DESC"
      }
    });
    this.evals = evals.map(item => ({
      customer: item.eval_customer.name,
      date: getLocaleDateString(item.eval_time),
      eval: item.eval_content,
      stars: item.stars
    }));
    this.eval_count = count;
    this.$apply();
  }

  async fetchGoodsEvals(id) {
    const { count, rows: evals } = await request(api.goodsEvals, {
      data: {
        count: true,
        goods_id: id,
        include: "eval_customer",
        is_first_eval: 1,
        limit: this.eval_limit,
        order: "eval_time DESC"
      }
    });
    this.evals = evals.map(item => ({
      customer: item.eval_customer.name,
      date: getLocaleDateString(item.eval_time),
      eval: item.eval_content,
      stars: item.stars
    }));
    this.eval_count = count;
    this.$apply();
  }

  async fetchRecommend() {
    const data = await request(api.business, {
      data: {
        limit: 2,
        is_hot: 1
      }
    });
    this.recommend = data.map(item => ({
      previews: item.img.split(",").map(_ => root + _),
      name: item.name,
      desc: item.description,
      id: item.id
    }));
    this.$apply();
  }
}
</script>
