<style>
.merchant-banners {
  height: 100vw;
}

.merchant-banner {
  width: 100%;
  height: 100%;
}
.merchant-header {
  padding: 20rpx 30rpx;
  background: #fff;
}

.m-b-1 {
  margin-bottom: 10rpx;
}

.header-title {
  font-size: 30rpx;
  color: #f90;
}

.header-desc {
  font-size: 26rpx;
  color: #555;
}

.header-other {
  font-size: 26rpx;
  color: #888;
}

.goods-wrapper {
  padding: 30rpx;
  border-bottom: 1rpx solid #e5e5e5;
}

navigator:last-child {
  margin-bottom: 20px;
}

.merchant-goods,
.merchant-vouchers {
  background: #fff;
  /* min-height: 100vh; */
}

.merchant-panel {
  background: #fff;
  margin-top: 30rpx;
  border-top: 0.5px solid #e5e5e5;
  border-bottom: 0.5px solid #e5e5e5;
}

.panel-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20rpx 30rpx;
  font-weight: bolder;
  color: #333;
}

.header-primary {
  font-size: 32rpx;
  color: #ffcc00;
}

.panel-detail {
  padding: 12rpx 30rpx;
  font-size: 28rpx;
  color: #555;
  line-height: 1.5;
}

.merchant-recommend {
  display: flex;
}
.merchant-recommend .recommend {
  width: 50%;
}

.recommend-wrapper {
  padding: 0 20rpx;
}

.preview {
  width: 100%;
  height: 100%;
}

.preview-wrapper {
  width: 100%;
  height: auto;
  display: flex;
  align-items: center;
  justify-content: center;
}
.center {
  margin-top: 10rpx;
  text-align: center;
  font-size: 26rpx;
  color: #555;
}
</style>
<template>
  <view class="merchant">
    <swiper class="merchant-banners" autoplay="true" circular="true" indicator-dots="{{shop.shop_img.length > 1}}" indicator-color="#f8f8f8" indicator-active-color="#f8a312">
      <repeat for="{{shop.shop_img}}" key="index" index="index" item="item">
        <swiper-item>
          <image src="{{item}}" class="merchant-banner"/>
        </swiper-item>
      </repeat>  
    </swiper>
    <view class="merchant-header">
      <view class="header-title m-b-1">{{shop.name}}</view>
      <view class="header-desc m-b-1">{{shop.shop_desc}}</view>
      <view class="header-other m-b-1" @tap="makecall">
        <text class="zan-icon zan-icon-phone"></text>
        {{shop.connect_phone}}
        </view>
      <view class="header-other" @tap="viewAddr">
        <text class="zan-icon zan-icon-location"></text>
        {{shop.address}}
      </view>
    </view>
    <view class="merchant-panel" wx:if="{{recommend.length > 0}}">
      <view class="panel-header">
        <view class="header-primary">银行产品推荐</view>
      </view>
      <view class="panel-detail merchant-recommend">
        <repeat for="{{recommend}}">
          <view @tap="viewRecommend({{index}})" class="recommend">
            <view class="recommend-wrapper">
              <view class="preview-wrapper">
                <image mode="widthFix" class="preview" src="{{item.img}}"/> 
              </view>
              <view class="center">{{item.name}}</view>
            </view>  
          </view>
        </repeat>
      </view>
    </view>
    <view class="zan-tab" style="margin-top: 40rpx;">
      <view class="zan-tab__bd">
        <view @tap="changeTab(goods)" class="zan-tab__item {{condition === 'goods' ? 'zan-tab__item--selected' : ''}}">
          <view class="zan-tab__title">商品</view>
        </view>
        <view @tap="changeTab(vouchers)" class="zan-tab__item {{condition === 'vouchers' ? 'zan-tab__item--selected' : ''}}">
          <view class="zan-tab__title">代金券</view>
        </view>
      </view>
    </view>
    <view class="merchant-goods" hidden="{{condition !== 'goods'}}">
      <repeat for="{{goods}}" key="index" index="index" item="item">
        <navigator hover-class="none" url="/pages/customer/gift-goods?type=goods&id={{item.id}}">
          <goods class="goods-wrapper" :item="item" vertical="false"/>
        </navigator>
      </repeat>
    </view>
    <view class="merchant-vouchers" hidden="{{condition !== 'vouchers'}}">
      <repeat for="{{vouchers}}" key="index" index="index" item="item">
        <navigator hover-class="none" url="/pages/customer/voucher?id={{item.id}}">
          <vouchers class="goods-wrapper" :item="item" vertical="false"/>
        </navigator>
      </repeat>
    </view>
    <view hidden="{{!noData}}" class="zan-loadmore zan-loadmore--nodata">
      <view class="zan-loadmore__tips">暂无数据</view>
    </view>
  </view>
</template>
<script>
import wepy from "wepy";
import { api, root } from "@/config";
import request from "@/utils/request";
import goods from "@/components/customer/goods";
export default class extends wepy.page {
  config = {
    navigationBarTitleText: "商户详情"
  };

  components = {
    goods,
    vouchers: goods
  };

  data = {
    id: "",
    shop: {
      shop_img: []
    },
    recommend: [],
    condition: "goods",
    goods: [],
    vouchers: [],
    page: 1,
    noMore: false,
    noData: false
  };

  limit = 10;

  methods = {
    viewRecommend(index) {
      // const data = this.recommend[index];
      // this.$preload(data);
      // this.$navigate(
      //   "/pages/customer/recommend?id=" + data.id + "&name=" + data.name
      // );
      const data = this.recommend[index];
      if (index === 0) {
        this.$navigate("/pages/customer/gift-goods?type=goods&id=" + data.id);
      } else if (index === 1) {
        this.$navigate("/pages/customer/voucher?id=" + data.id);
      }
    },
    changeTab(condition) {
      this.condition = condition;
      setTimeout(() => {
        this.reset();
        this.fetchData();
      }, 0);
    },
    makecall() {
      wx.makePhoneCall({
        phoneNumber: this.shop.connect_phone
      });
    },
    viewAddr() {
      wx.openLocation({
        longitude: this.shop.long,
        latitude: this.shop.lat,
        name: this.shop.name,
        address: this.shop.address
      });
    }
  };

  onLoad({ id, name }, { preload }) {
    this.id = id;
    // if (!preload) {
    //   this.fetchMerchant();
    // } else {
    //   this.shop = preload;
    // }
    this.fetchMerchant();
    this.fetchData();
  }

  onReachBottom() {
    if (!this.noData && !this.noMore) {
      setTimeout(() => {
        this.page++;
        this.fetchData();
      }, 0);
    }
  }

  reset() {
    this.noData = this.noMore = false;
    this.page = 1;
    this.goods = [];
    this.vouchers = [];
  }

  async fetchData() {
    this.condition === "goods" ? this.fetchGoods() : this.fetchVouchers();
  }

  async fetchMerchant() {
    const data = await request(api.shop.replace(":id", this.id), {
      data: {
        include: "recommend1,recommend2"
      }
    });
    data.shop_img = data.shop_img.split(",").map(_ => root + _);
    this.shop = data;
    if (data.recommend1) {
      data.recommend1.img =
        root +
        (data.recommend1.img || data.recommend1.previews || "").split(",")[0];
      this.recommend.push(data.recommend1);
    }
    if (data.recommend2) {
      data.recommend2.img =
        root +
        (data.recommend2.img || data.recommend2.previews || "").split(",")[0];
      this.recommend.push(data.recommend2);
    }

    this.$apply();
  }

  async fetchGoods() {
    let data = await request(api.goods, {
      data: {
        examine_status: 3,
        enabled: 1,
        shop_id: this.id,
        limit: this.limit,
        page: this.page,
        include: "activity"
      }
    });
    data.forEach(item => {
      if (!!item.activity && item.activity.enabled) {
        item.price = item.activity.price;
        item.exch_points = item.activity.exch_points;
        item.pay_type = item.activity.pay_type;
      }

      item.amount = item.price;

      if (!!item.previews) {
        item.preview = root + item.previews.split(",")[0];
      }
      item.price = (item.amount / 100).toFixed(2);
      item.points = item.exch_points;
    });

    if (data.length === 0) {
      this.page === 1 ? (this.noData = true) : (this.noMore = true);
    } else if (data.length < this.limit) {
      this.noMore = true;
    }
    this.goods = this.goods.concat(data);
    this.$apply();
  }

  async fetchVouchers() {
    let data = await request(api.vouchers, {
      data: {
        shop_id: this.id,
        limit: this.limit,
        page: this.page,
        include: "activity",
        examine_status: 3,
        enabled: 1
      }
    });
    data.forEach(item => {
      if (!!item.img) {
        item.preview = root + item.img.split(",")[0];
      }

      if (!!item.activity && item.activity.enabled) {
        item.price = item.activity.price;
        item.exch_points = item.activity.exch_points;
        item.pay_type = item.activity.pay_type;
      }
      item.amount = item.price;
      item.points = item.exch_points;
      item.price = (item.amount / 100).toFixed(2);
    });

    if (data.length === 0) {
      this.page === 1 ? (this.noData = true) : (this.noMore = true);
    } else if (data.length < this.limit) {
      this.noMore = true;
    }
    this.vouchers = this.vouchers.concat(data);
    this.$apply();
  }
}
</script>
