<style scoped>
.placeholder {
  color: #888;
}
.right {
  text-align: right;
}
.zan-btn--primary {
  background-color: #ff9900;
  border-color: #ffaa00;
}
.m-r-2 {
  margin-right: 10rpx;
}
.points:after {
  content: "积分";
  margin-left: 3px;
  font-size: 14px;
}
.price,
.points {
  font-size: 20px;
}
.price:before {
  content: "¥";
  margin-right: 2px;
  font-size: 14px;
}
.price + .points:before {
  content: "+";
  margin: 0 4px;
  font-size: 14px;
}
</style>
<template>
  <view>
    <view class="zan-panel-title">{{typeDesc}}信息</view>
    <view class="zan-panel">
      <view class="zan-cell">
        <view class="zan-cell__bd">品名</view>
        <view class="zan-cell__ft">{{name}}</view>
      </view>
      <view class="zan-cell" hidden="{{type !== 'gift'}}">
        <view class="zan-cell__bd">品牌</view>
        <view class="zan-cell__ft">{{brand}}</view>
      </view>
      <view wx:if="{{payType !== 0}}" class="zan-cell">
        <view class="zan-cell__bd">价格</view>
        <view class="zan-cell__ft">¥{{price}}</view>
      </view>
      <view wx:if="{{payType !== 1}}" class="zan-cell">
        <view class="zan-cell__bd">积分</view>
        <view class="zan-cell__ft">{{points}}</view>
      </view>
    </view>

    <view class="zan-panel-title">{{type === 'gift' ? '选择兑换网点' : '商户信息'}}</view>
    <view class="zan-panel">
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">{{type === 'gift' ? '兑换网点' : '商户'}}</view>
        <view wx:if="{{type !== 'gift'}}" class="zan-cell__bd zan-field__input right">{{selectedNetspot && selectedNetspot.name}}</view>
        <picker wx:elif="{{netspots.length > 0}}" class="zan-cell__bd zan-field__input right {{!selectedNetspot ? 'placeholder' : ''}}" range="{{netspots}}" range-key="name" bindchange="netspotChange">
          {{selectedNetspot && selectedNetspot.name || '选择兑换网点'}}
        </picker>
        <view wx:else class="zan-cell__bd zan-field__input right placeholder">暂无库存</view>
      </view>
      <view wx:if="{{!!selectedNetspot}}" class="zan-cell">
        <view class="zan-cell__bd">电话</view>
        <view @tap="makecall" class="zan-cell__ft">
          <text class="zan-icon zan-icon-phone m-r-2"></text>
          <text>{{selectedNetspot.phone}}</text>
        </view>
      </view>
      <view wx:if="{{!!selectedNetspot}}" class="zan-cell">
        <view class="zan-cell__bd">地址</view>
        <view @tap="viewAddr" class="zan-cell__ft">
          <text class="zan-icon zan-icon-location m-r-2"></text>
          <text>{{selectedNetspot.address}}</text>
        </view>
      </view>
    </view>

    <view class="zan-btns" hidden="{{!selectedNetspot}}">
      <button class="zan-btn zan-btn--primary" @tap="confirm">
        <text style="margin-right: 5px;">使用</text>
        <text wx:if="{{payType !== 0}}" class="price">{{price}}</text>
        <text wx:if="{{payType !== 1}}" class="points">{{points}}</text>
        <text style="margin-left: 5px;">兑换</text>
      </button>
    </view>

  </view>
</template>
<script>
import wepy from "wepy";
import { api, root } from "@/config";
import request from "@/utils/request";
export default class extends wepy.page {
  config = {
    navigationBarTitleText: "确认兑换"
  };

  data = {
    type: "gift",
    id: "",
    name: "",
    payType: 0,
    brand: "无",
    price: 0,
    amount: 0,
    points: 0,
    netspots: [],
    selectedNetspot: null
  };

  typeMapping = {
    gift: "礼品",
    goods: "商品",
    voucher: "代金券"
  };

  computed = {
    typeDesc() {
      return this.typeMapping[this.type];
    }
  };

  methods = {
    netspotChange(e) {
      this.selectedNetspot = this.netspots[e.detail.value];
    },
    viewAddr() {
      wx.openLocation({
        longitude: this.selectedNetspot.long,
        latitude: this.selectedNetspot.lat,
        name: this.selectedNetspot.name,
        address: this.selectedNetspot.address
      });
    },
    makecall() {
      wx.makePhoneCall({
        phoneNumber: this.selectedNetspot.phone
      });
    },
    confirm() {
      wx.showModal({
        title: "提示",
        content: "确定要兑换该" + this.typeDesc + "吗？",
        success: res => {
          if (res.confirm) {
            this.confirmExch();
          }
        }
      });
    }
  };

  onLoad({ type, id }, { preload }) {
    this.id = id;
    Object.assign(this, preload);
    if (type === "goods") {
      this.type = type;
      this.fetchGoods();
    } else if (type === "voucher") {
      this.type = type;
    } else {
      this.fetchNearbyNetspots();
    }
  }

  async fetchGoods() {
    const data = await request(api.goods + "/" + this.id, {
      data: {
        include: "shop,activity"
      }
    });
    this.name = data.name;

    if (!!data.activity && data.activity.enabled) {
      data.price = data.activity.price;
      data.exch_points = data.activity.exch_points;
      data.pay_type = data.activity.pay_type;
    }

    data.amount = data.price;
    this.price = (data.amount / 100).toFixed(2);
    this.amount = data.amount;
    this.points = data.exch_points;
    this.payType = data.pay_type;

    data.shop.phone = data.shop.connect_phone;
    this.selectedNetspot = data.shop;
    this.$apply();
  }

  async fetchNearbyNetspots() {
    const data = await request(api.stocks, {
      data: {
        gift_id: this.id,
        stock: "1,",
        include: "netspot"
      }
    });
    this.netspots = data
      .map(item => item.netspot)
      .filter(item => item.is_parent !== 1);
    this.$apply();
  }

  async confirmExch() {
    const { customer, customerId } = this.$parent.globalData;
    wx.showLoading({
      title: "正在处理..."
    });
    try {
      const values = {
        _count: 1,
        exch_points: this.points,
        pay_type: this.payType, // 支付方式，0：积分
        amount: this.amount,
        total_points: this.points,
        price: this.amount,
        status: 0,
        sum_price: 0,
        customer_id: customerId,
        create_time: new Date(),
        pay_time: new Date(),
        customer_name: customer.name,
        phone: customer.phone
      };
      if (this.type === "gift") {
        values.gift_id = this.id;
        values.netspot_id = this.selectedNetspot.id;
        values.type = 0;
      } else if (this.type === "voucher") {
        values.voucher_id = this.id;
        values.type = 1;
        values.shop_id = this.selectedNetspot.id;
      } else {
        values.goods_id = this.id;
        values.type = 2;
        values.shop_id = this.selectedNetspot.id;
      }
      const order = await request(api.orders, {
        method: "POST",
        data: values
      });

      wx.hideLoading();

      // 扣除积分
      if (this.payType !== 1) {
        customer.exch_points -= order.total_points;
        //customer.total_points -= this.points;
      }

      if (this.payType === 0) {
        this.$preload({
          name: this.name,
          points: order.total_points,
          price: (order.amount / 100).toFixed(2),
          amount: order.amount,
          netspot: this.selectedNetspot,
          orderId: order.id,
          orderNo: order.order_no,
          payType: order.pay_type
        });
        this.$redirect(
          "/pages/customer/exch-result?type=" +
            this.type +
            "&id=" +
            order.id +
            "&no=" +
            order.order_no
        );
      } else {
        this.$root.$redirect(
          `/pages/customer/payment?orderId=${
            order.id
          }&frontUrl=${encodeURIComponent(
            api.payfront +
              "?type=redirectTo&url=/pages/customer/order?id=" +
              order.id
          )}&endUrl=${encodeURIComponent(api.payback)}`
        );
      }
    } catch (err) {
      wx.hideLoading();
      wx.showToast({
        title: err.message,
        icon: "none",
        duration: 1200
      });
    }
  }
}
</script>
