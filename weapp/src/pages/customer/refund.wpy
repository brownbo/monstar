<style>
.zan-btn--primary {
  background-color: #ff9900;
  border-color: #ffaa00;
}
</style>

<template>
  <view>
    <view class="zan-panel">
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">退款原因</view>
        <input class="zan-cell__bd zan-field__input" placeholder="输入退款原因" bindinput="reasonInput"/>
      </view>
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">退款描述</view>
        <input class="zan-cell__bd zan-field__input" placeholder="输入退款描述" bindinput="descInput"/>
      </view>
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">联系电话</view>
        <input type="number" class="zan-cell__bd zan-field__input" placeholder="输入联系手机" bindinput="phoneInput"/>
      </view>
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">联系地址</view>
        <input class="zan-cell__bd zan-field__input" placeholder="输入联系地址" bindinput="addrInput"/>
      </view>
    </view>  
    <view class="zan-btns" style="margin-top: 20px;">
      <button class="zan-btn zan-btn--primary" @tap="confirm" disabled="{{!showConfirm}}">确定</button>
    </view> 
  </view>
</template>

<script>
import wepy from "wepy";
import { api } from "@/config";
import request from "@/utils/request";
export default class extends wepy.page {
  config = {
    navigationBarTitleText: "申请退款"
  };

  data = {
    id: "",
    reason: "",
    desc: "",
    phone: "",
    addr: ""
  };

  computed = {
    showConfirm() {
      return (
        this.reason && this.desc && /^1\d{10}$/.test(this.phone) && this.addr
      );
    }
  };

  methods = {
    reasonInput(e) {
      this.reason = e.detail.value;
    },
    descInput(e) {
      this.desc = e.detail.value;
    },
    phoneInput(e) {
      this.phone = e.detail.value;
    },
    addrInput(e) {
      this.addr = e.detail.value;
    },
    confirm() {
      this.refund();
    }
  };

  onLoad({ id }) {
    this.id = id;
    console.log("orderid", this.id);
  }

  async refund() {
    wx.showLoading({
      title: "正在处理..."
    });
    try {
      await request(api.refund.replace(":id", this.id), {
        method: "PUT",
        data: {
          reason: this.reason,
          desc: this.desc,
          phone: this.phone,
          addr: this.addr
        }
      });
      wx.hideLoading();
      wx.showToast({
        title: "操作成功",
        icon: "success",
        duration: 1200
      });
      // 后台刷新客户积分信息
      setTimeout(async () => {
        let { cookies, openid, customer } = this.$parent.globalData;
        const _customer = await request(api.currentCustomer, {
          header: {
            Cookie: cookies
          },
          data: { openid }
        });
        if (_customer) {
          this.$parent.globalData.customer = Object.assign(customer, _customer);
        }
      }, 0);
      // 延迟后退
      setTimeout(() => wx.navigateBack(), 1200);
    } catch (err) {
      wx.hideLoading();
      wx.showToast({
        title: err.message || err,
        icon: "none",
        duration: 1200
      });
    }
  }
}
</script>
