<style>

  .clear {
    position: absolute;
    top: 0px;
    right: 2px;
  }

  .img-text {
    font-size: 12px;
  }

  .placeholder {
    color: #666;
  }

  .zan-cell__code {
    width: 71px;
  }

  button[disabled] {
    border-color: #ccc;
  }

  .zan-btn--primary {
    background-color: #ff9900;
    border-color: #ffaa00;
    color: #fff;
  }

  /* .zan-btn--primar{
     background-color: #ff9900;
     border-color: #ffaa00;
     color: #fff;
   }*/
  .zan-shop button[disabled] {
    background-color: #ff9900;
    border-color: #ffaa00;
    color: rgba(0, 0, 0, 0.3);

  }


</style>

<template>
  <view class="my">

    <view class="zan-panel">
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">手机号</view>
        <input id="phone" bindinput="bindPhoneInput" focus class="zan-cell__bd zan-field__placeholder"
               placeholder="请输入手机号"/>
      </view>
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">验证码</view>
        <input type="number" class="zan-field__input zan-cell__bd" placeholder="请输入验证码" bindinput="bindVcodeInput"/>
        <view class="zan-cell__code">
          <button class="zan-btn zan-btn--mini zan-btn--warn" bindtap="sendVcode(60)" disabled="{{!showVcode}}">
            {{countdown >= 0 ? '重新获取(' + countdown + ')':'获取验证码'}}
          </button>
        </view>
      </view>
      <view wx:if="{{haveShop}}" class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">商户</view>
        <picker bindchange="changeShop" range="{{shops}}" range-key="name"
                class="zan-cell__bd zan-field__input {{!selectedShop ? 'placeholder' : ''}}">{{!selectedShop ? "选择商户" :
          selectedShop.name}}
        </picker>
      </view>
    </view>
    <view wx:if="{{haveShop}}" class="zan-btns">
      <button class="zan-btn zan-btn--primary" @tap="getStatus">查看状态</button>
    </view>
    <view wx:if="{{toget}}" class="zan-btns zan-shop">
      <button class="zan-btn zan-btn--primary" disabled="{{!showSubmit}}" @tap="getMyShop">获取商户</button>
    </view>
    <view wx:if="{{toget}}" class="zan-btns">
      <button class="zan-btn zan-btn--primary" @tap="getApply">去申请</button>
    </view>
    <toptips/>
    <toast/>
  </view>
</template>

<script>

  import wepy from "wepy";
  import {api, root} from "@/config";
  import request from "@/utils/request";
  import toptips from "@/components/common/toptips";
  import toast from "@/components/common/toast";
  export default class extends wepy.page {
    config = {
      navigationBarTitleText: "申请状态"
    };

    data = {
      phone: "",
      shops: [],
      selectedShop: null,
      shopId: '',
      countdown: -1,
      haveShop: '',
      noShop: '',
      toget: true,
      vcode: '',
    };


    components = {
      toptips,
      toast
    };
    computed = {
      showVcode() {
        return this.countdown < 0 && /^1\d{10}$/.test(this.phone);
      },
      showSubmit(){
        return (
          /^1\d{10}$/.test(this.phone) &&
          /^\d{6}$/.test(this.vcode)
        );
      }

    };
    methods = {

      bindPhoneInput(e) {
        this.phone = e.detail.value;

      },
      bindVcodeInput(e){
        this.vcode = e.detail.value

      },
      changeShop(e){
        this.selectedShop = this.shops[e.detail.value];
        this.shopId = this.shops[e.detail.value].id
      },
      sendVcode(sec) {
        this.countdown = ~~sec - 1;
        const timer = setInterval(() => {
          this.countdown = this.countdown - 1;
          this.$apply();
          if (this.countdown < 0) clearInterval(timer);
        }, 1000);
        this.$root.$parent.sendSms(this.phone);
      },
      getStatus() {
        if (this.shopId) {
          wx.navigateTo({
            url: '/pages/merchant/applyStatus?shopid=' + this.shopId,
          });
        } else {
          return this.showTopTips("请选择商户!");
        }

      },
      getApply() {
        wx.navigateTo({
          url: '/pages/merchant/notice',
        });
      },
    }

    async  getMyShop(){
        //this.getShops();
        //先验证成功
        try {
          await request(api.checkSms, {
            data: {phone: this.phone, vcode: this.vcode}
          })
          this.getShops()
        } catch (err) {
          if (err) {
            return this.showTopTips("验证码错误");
          }
        }

    }

    async getShops() {
      const shops = await request(api.shops, {
        data: {connect_phone: this.phone}
      });
      if (shops.length == 0) {
        this.showTopTips("你还未进行商户申请");
        this.haveShop = false;
      } else {
        this.toget = false;
        this.shops = [];
        shops.map(item=> {
          this.shops.push({
            name: item.name,
            id: item.id,
          })
        });
        this.haveShop = true;
      }
      this.$apply();
    }

    showTopTips(content, duration) {
      this.$invoke("toptips", "showTopTips", content, duration);
    }

    onShow() {
      //每次进入当前页面时触发(解决点击返回按钮时带来的影响)
      this.selectedShop = null;
      this.shops = [];
      this.shopId = '';
      this.haveShop = false;
      this.toget = true;
    }

  }
</script>

