<style>
  .my-header {
    padding: 20 rpx;
    color: #ff9900;
    font-size: 40 rpx;
  }

  .zan-panel {
    margin-top: 0;
  }

  .zan-cell__ft {
    flex: 2;
    text-align: left;
  }

  .zan-cell__ft2 {
    width: 80px;
    text-align: left;
  }

  .zan-btn--primary {
    background-color: #ff9900;
    border-color: #ffaa00;
  }

  .zan-cell__img {
    width: 33.3333%;
    padding: 3px 5px;
  }

  .zan-cell__theme {
    width: 98%;
  }

  .shop-img {
    width: 100%;
    height: 90px;
  }

  .desc__text {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }

  .zan-text {
    text-align: center;
    border: 1px dashed #d9d9d9;
    background-color: #fafafa;
    line-height: 45px;
  }

  .zan-row {
    width: 100%;
  }

  .imgpadd {
    padding: 5px;
    position: relative;
  }

  .my-icon-down {
    font-size: 20 rpx;
    transform: rotate(90deg);
  }

  .menu-item {
    display: flex;
  }

  .menu-view {
    display: flex;
    font-size: 30 rpx;
    position: relative;
  }

  .road {
    transform: scale(0.8);
    width: 45px;
  }

  .active-type {
    text-align: right;
  }

  .zan-cell-active {
    position: relative;
    display: flex;
    padding: 8px 15px;
    align-items: center;
    line-height: 1.4;
    font-size: 15px;
    margin-bottom: 5px;
  }

  .time-border {
    border-bottom: 1px solid #c8c8c8;
    text-align: center;
    padding: 3px;
    color: #999999;
  }

  .btn-margin-right {
    margin-right: 10px;
  }

  .btn-margin-left {
    margin-left: 10px;
  }

  .zan-type {
    position: relative;
    padding: 12px 15px;
    display: flex;
    align-items: center;
    line-height: 1.4;
    font-size: 14px
  }

  .zan-cell-img {
    position: relative;
    padding: 5px 15px;
    display: flex;
    align-items: center;
    line-height: 1.4;
    font-size: 14px
  }

  .clear {
    position: absolute;
    top: 0px;
    right: 2px;
  }

  .img-text {
    font-size: 12px;
  }

</style>

<template>
  <view class="my">
    <view wx:if="{{voucherId}}">
      <loading hidden="{{hidden}}">
        加载中...
      </loading>
    </view>
    <view class="zan-panel zan-cell-active">
      <view class="body-view zan-cell__bd">开启活动</view>
      <view class="body-view active-type road">
        <switch checked="{{!!is_active}}" bindchange="switchChange"/>
      </view>
    </view>
    <view class="zan-panel">
      <view class="zan-cell">
        <view class="zan-cell__bd">代金券名称</view>
        <input id="voucherName" bindinput="bindinput" class="zan-cell__ft zan-field__placeholder" placeholder="请输入代金券名称"
               value="{{voucherName}}"/>
      </view>
      <view class="zan-cell">
        <view class="zan-cell__bd">代金卷面值</view>
        <input id="value" bindinput="bindinput" type="number" class="zan-cell__ft zan-field__placeholder"
               placeholder="请输入代金卷面值"
               value="{{value}}"/>
      </view>
      <view class="zan-cell">
        <view class="zan-cell__bd">代金券数量</view>
        <input id="sum_count" bindinput="bindinput" type="number" class="zan-cell__ft zan-field__placeholder"
               placeholder="请输入代金券数量"
               value="{{sum_count}}"/>
      </view>
      <!--<view class="zan-cell">
        <view class="zan-cell__bd">结算金额</view>
        <input id="settle_price" bindinput="bindinput" class="zan-cell__ft zan-field__placeholder"
               placeholder="请输入结算金额"
               value="{{settle_price}}"/>
      </view>-->
      <view class="zan-cell">
        <view class="zan-cell__bd">描述</view>
        <input id="descript" bindinput="bindinput" class="zan-cell__ft zan-field__placeholder" placeholder="请输入描述"
               value="{{descript}}"/>
      </view>
      <!--<view class="zan-cell">
        <view class="zan-cell__bd">
          有效时间
        </view>
        <view class="zan-cell__bd time-border">
          <picker mode="date" value="{{date}}" start="2015-09-01" end="2050-01-01" bindchange="bindStartTimeChange">
            <view class="picker zan-cell__bd ">
              {{startTime?(startTime):('开始时间')}}
            </view>
          </picker>
        </view>
        至
        <view class="zan-cell__bd time-border">
          <picker mode="date" value="{{date}}" start="2015-09-01" end="2050-01-01" bindchange="bindEndTimeChange">
            <view class="picker zan-cell__bd">
              {{endTime?(endTime):('结束时间')}}
            </view>
          </picker>
        </view>
      </view>-->
      <view class="zan-cell menu-view">
        <view class="zan-cell__bd">
          <picker bindchange="bindPickerChange" value="{{index}}" range="{{payType}}">
            <view class="menu-item marginleft zan-c-gray-dark">
              <view>{{payType[pay_status]}}</view>
              <view class="zan-icon zan-icon-arrow my-icon-down"></view>
            </view>
          </picker>
        </view>
      </view>
      <view wx:if="{{pay_status==0||pay_status==2}}" class="zan-cell">
        <view class="zan-cell__bd">积分</view>
        <view class="zan-cell__ft">
          <input id="exch_points" bindinput="bindinput" type="number" class="zan-field__placeholder" placeholder="请输入积分"
                 value="{{exch_points}}"/>
        </view>
      </view>
      <view wx:if="{{pay_status==1||pay_status==2}}" class="zan-cell">
        <view class="zan-cell__bd">金额</view>
        <view class="zan-cell__ft">
          <input id="price" bindinput="bindinput" type="number" class="zan-field__placeholder" placeholder="请输入金额"
                 value="{{price}}"/>
        </view>
      </view>
      <block wx:if="{{is_active}}">
        <view class="zan-cell">
          <view class="zan-cell__bd">活动代金券数量</view>
          <input id="active_count" bindinput="bindinput" type="number" class="zan-cell__ft zan-field__placeholder"
                 placeholder="请输入活动代金券数量"
                 value="{{active_count}}"/>
        </view>
        <!--<view class="zan-cell">
          <view class="zan-cell__bd">活动结算金额</view>
          <input id="active_settle_price" bindinput="bindinput" class="zan-cell__ft zan-field__placeholder"
                 placeholder="请输入结算金额"
                 value="{{active_settle_price}}"/>
        </view>-->
        <view class="zan-cell">
          <view class="zan-cell__bd">
            活动时间
          </view>
          <view class="zan-cell__bd time-border">
            <picker mode="date" value="{{date}}" start="2015-09-01" end="2050-01-01"
                    bindchange="activebindStartTimeChange">
              <view class="picker zan-cell__bd ">
                {{active_startTime?(active_startTime):('开始时间')}}
              </view>
            </picker>
          </view>
          至
          <view class="zan-cell__bd time-border">
            <picker mode="date" value="{{date}}" start="2015-09-01" end="2050-01-01"
                    bindchange="activebindEndTimeChange">
              <view class="picker zan-cell__bd">
                {{active_endTime?(active_endTime):('结束时间')}}
              </view>
            </picker>
          </view>
        </view>
        <view class="zan-cell menu-view">
          <view class="zan-cell__bd">
            <picker bindchange="activebindPickerChange" value="{{index}}" range="{{active_payType}}">
              <view class="menu-item marginleft zan-c-gray-dark">
                <view>{{active_payType[active_pay_status]}}</view>
                <view class="zan-icon zan-icon-arrow my-icon-down"></view>
              </view>
            </picker>
          </view>
        </view>
        <view wx:if="{{active_pay_status==0||active_pay_status==2}}" class="zan-cell">
          <view class="zan-cell__bd">活动积分</view>
          <view class="zan-cell__ft">
            <input id="active_exch_points" bindinput="bindinput" type="number" class="zan-field__placeholder" placeholder="请输入积分"
                   value="{{active_exch_points}}"/>
          </view>
        </view>
        <view wx:if="{{active_pay_status==1||active_pay_status==2}}" class="zan-cell">
          <view class="zan-cell__bd">活动金额</view>
          <view class="zan-cell__ft">
            <input id="active_price" bindinput="bindinput" type="number" class="zan-field__placeholder" placeholder="请输入金额"
                   value="{{active_price}}"/>
          </view>
        </view>
      </block>
      <view class="zan-cell-img">
        <view class="zan-row">
          <view wx:if="{{img}}" class="zan-col zan-col-24 imgpadd">
            <image src="{{img}}" class="shop-img"/>
            <view @tap="deletImg" class="clear">
              <icon type="clear" size="14"/>
            </view>
          </view>
          <view wx:if="{{!img}}" class="zan-col zan-col-8 imgpadd">
            <view class="zan-icon zan-icon-add zan-text shop-img" style="color: #ff9900" @tap="addTheme">
              <view class="img-text">代金券图片</view>
            </view>
          </view>
        </view>
      </view>
    </view>
    <view class="zan-type">
      <view class="zan-cell__bd btn-margin-right">
        <button class="zan-btn zan-btn--primary" @tap="back">取消</button>
      </view>
      <view class="zan-cell__bd btn-margin-left">
        <button class="zan-btn zan-btn--primary" @tap="confirm" disabled="{{!showConfirm}}">{{submit}}</button>
      </view>
    </view>
    <toptips/>
    <toast/>
  </view>
</template>

<script>

  import wepy from "wepy";
  import {api, root} from "@/config";
  import request from "@/utils/request";
  import toptips from "@/components/common/toptips";
  import toast from "@/components/common/toast";
  import {getLocaleFullDateString,getLocaleTimeString,getLocaleDateString,price} from "@/utils/format";
  export default class extends wepy.page {
    config = {
      navigationBarTitleText: "新增代金券"
    };
    /*amount金额支付pay_status支付方式sum_count代金券数量active_count活动代金券数量*/
    data = {
      action: "info",
      title: "新增代金券",
      active: ['非活动', '活动'],

      payType: ['积分支付', '金额支付', '积分金额支付'],
      pay_status: 0,
      exch_points: '',
      price: '',

      startTime: '',
      endTime: '',
      settle_price: '',


      active_payType: ['活动积分支付', '活动金额支付', '活动积分金额支付'],
      active_pay_status: 0,
      active_exch_points: '',
      active_price: '',

      active_startTime: '',
      active_endTime: '',
      active_settle_price: '',

      value: "",
      descript: "",
      voucherName: '',
      is_active: 0,
      sum_count: '',
      active_count: '',
      img: '',
      merchantId: '',

      shop_id: '',
      voucherId: '',
      activity_id: '',

      hidden: false,
      submit: '确认新增',
      typeName: '',


    };
    computed = {
      showConfirm() {
        if (this.is_active) {
         return !!this.voucherName &&
           !!this.descript &&
           //!!this.startTime &&
           //!!this.endTime &&
           /^(0|[1-9][0-9]{0,9})(\.[0-9]{1,2})?$/.test(this.value) &&
           /^([1-9]\d*|[0]{1,1})$/.test(this.sum_count) &&
           !!this.img &&
           (/^([1-9]\d*|[0]{1,1})$/.test(this.exch_points) || /^(0|[1-9][0-9]{0,9})(\.[0-9]{1,2})?$/.test(this.price))&&
           /^([1-9]\d*|[0]{1,1})$/.test(this.active_count)&&
          (/^([1-9]\d*|[0]{1,1})$/.test(this.active_exch_points)||/^(0|[1-9][0-9]{0,9})(\.[0-9]{1,2})?$/.test(this.active_price))&&
           !!this.active_startTime && !!this.active_endTime;
         } else {
         return !!this.voucherName &&
          !!this.descript &&
          //!!this.startTime &&
          //!!this.endTime &&
           /^(0|[1-9][0-9]{0,9})(\.[0-9]{1,2})?$/.test(this.value)&&
          /^([1-9]\d*|[0]{1,1})$/.test(this.sum_count)&&
          !!this.img &&
          (/^([1-9]\d*|[0]{1,1})$/.test(this.exch_points) || /^(0|[1-9][0-9]{0,9})(\.[0-9]{1,2})?$/.test(this.price));
         }
      }
    };
    watch = {
      title(newTitle) {
        wx.setNavigationBarTitle({
          title: newTitle
        });
      },

    };

    components = {
      toptips,
      toast
    };
    methods = {
      bindinput(e) {
        this[e.target.id] = e.detail.value;
      },
      switchChange(e) {
        //是否是活动
        if (e.detail.value) {
          this.is_active = 1;
        } else {
          this.is_active = 0;
          //不是活动时候,活动代金券为空,活动时间也清空
          this.active_count = '';
          this.active_startTime = '';
          this.active_endTime = '';
        }
      },
      bindPickerChange(e){
        const value = e.detail.value;
        //0表示积分支付1表示金额支付2积分加金额
        //
        if (value == 0) {
          this.pay_status = value;
          //清空金额支付
          this.price = '';
          this.pay_point = true;
          this.pay_price = false;
        } else if (value == 1) {
          this.pay_status = value;
          //清空积分支付

          this.exch_points = '';
          this.pay_point = false;
          this.pay_price = true;
        } else if (value == 2) {
          this.pay_status = value;
          this.pay_point = true;
          this.pay_price = true;
        }
        this.$apply();
      },
      activebindPickerChange(e){
        //活动支付方式
        const value = e.detail.value;
        //0表示积分支付1表示金额支付
        if (value == 0) {
          this.active_pay_status = value;
          //清空金额支付
          this.active_price = '';

          this.active_pay_point = true;
          this.active_pay_price = false;
        } else if (value == 1) {
          this.active_pay_status = value;
          //清空积分支付
          this.active_exch_points = '';
          this.active_pay_point = false;
          this.active_pay_price = true;
        } else if (value == 2) {
          this.active_pay_status = value;
          this.active_pay_point = true;
          this.active_pay_price = true;
        }
        this.$apply();
      },
      bindStartTimeChange(e) {
        this.startTime = e.detail.value
      },
      bindEndTimeChange(e) {
        this.endTime = e.detail.value
      },
      activebindStartTimeChange(e) {
        this.active_startTime = e.detail.value
      },
      activebindEndTimeChange(e) {
        this.active_endTime = e.detail.value
      },

      confirm() {
        if (this.voucherId) {
          this.confirmUpdate();
        } else {
          this.confirmAdd();
        }
      },

      //添加主图片
      addTheme(){
        wx.chooseImage({
          count: 1, // 默认9
          sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
          sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
          success: (res) => {
            // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
            wx.uploadFile({
              url: api.upload, //仅为示例，非真实的接口地址
              filePath: res.tempFilePaths[0],
              name: 'filename',
              success: (res)=> {
                var data = res.data
                data = JSON.parse(data)
                this.img = root + data.url;
                this.$apply();
                this.showTopTips("图片上传成功")
              },
              fail: (res)=> {
                this.showTopTips("图片上传失败")
              }
            })
          }
        })
      },
      //返回
      deletImg(){
        //删除图片
        this.img = '';
        this.$apply();
      },
      back(){
        wx.navigateBack();
      }
    };

    async confirmAdd() {
      var newImg = this.img.substr(this.img.lastIndexOf('/', this.img.lastIndexOf('/') - 1))
      if (Number(this.sum_count)  < Number(this.active_count)) {
        return this.showTopTips("活动代金券数量不能超过代金券数量");
      }
      if (this.startTime > this.endTime) {
        return this.showTopTips("开始时间不能大于结束时间");
      }
      try {
        const data = await request(api.vouchers,
          {
            method: "POST",
            data: {
              voucher: {
                name: this.voucherName,
                value: this.value*100 || 0,
                desc: this.descript,
                is_active: this.is_active,
                sum_count: this.sum_count || 0,
                shop_id: this.shop_id,
                img: newImg,
                examine_status: 0,
                active_start_time: new Date(this.startTime),
                active_end_time: new Date(this.endTime),
                pay_type: this.pay_status,
                exch_points: this.exch_points||0,
                price: this.price*100||0,
              },
              activity: this.is_active ? {
                type: 1,
                pay_type: this.active_pay_status,
                exch_points: this.active_exch_points||0,
                price: this.active_price*100||0,
                start_at: new Date(new Date(this.active_startTime).setHours(0, 0, 0, 0)),
                end_at: new Date(new Date(this.active_endTime).setHours(23, 59, 59, 59)),
                _count: this.active_count,
                enabled:1,
              } : {},
            }
          }
        );
        var type = '新增成功'
        this.updateSuccess(data, type);
      } catch (err) {

        this.updateFail(err);
      }
    }

    async confirmUpdate() {
      var newImg = this.img.substr(this.img.lastIndexOf('/', this.img.lastIndexOf('/') - 1))
      if (this.is_active && (Number(this.sum_count) < Number(this.active_count))) {
        return this.showTopTips("活动代金券数量不能超过代金券数量");
      }
      if (this.is_active && (this.startTime > this.endTime)) {
        return this.showTopTips("开始时间不能大于结束时间");
      }
      try {
        const data = await request(api.voucher.replace(":id", this.voucherId),
          {
            method: "PUT",
            data: {
              voucher: {
                name: this.voucherName,
                value: this.value*100 || 0,
                desc: this.descript,
                is_active: this.is_active,
                sum_count: this.sum_count || 0,
                shop_id: this.shop_id,
                img: newImg,
                examine_status: 0,
                active_start_time: new Date(this.startTime),
                active_end_time: new Date(this.endTime),
                pay_type: this.pay_status,
                exch_points: this.exch_points||0,
                price: this.price*100||0,
                activity_id: this.activity_id,
              },
              activity: this.is_active ? {
                type: 1,
                pay_type: this.active_pay_status,
                exch_points: this.active_exch_points||0,
                price: this.active_price*100||0,
                start_at: new Date(new Date(this.active_startTime).setHours(0, 0, 0, 0)),
                end_at: new Date(new Date(this.active_endTime).setHours(23, 59, 59, 59)),
                _count: this.active_count,
                enabled:1,
              } :  this.activity_id ? {enabled: 0} : {},
            }
          }
        );
        var type = '修改成功'
        this.updateSuccess(data, type);
      } catch (err) {
        this.updateFail(err);
      }
    }

    updateSuccess(data, type) {
      wx.showToast({
        title: type,
        icon: "success",
        duration: 1000
      });
      setTimeout(() => {
       wx.navigateBack();
       }, 1000);
    }

    updateFail(err) {
      this.$invoke("toast", "showToast", err.message, 1200);
    }

    showTopTips(content, duration) {
      this.$invoke("toptips", "showTopTips", content, duration);
    }


    onLoad({id}) {
      if (id) {
        this.title = "维护更新代金券";
        this.submit = '确认修改';
        this.fetvoucherInfo(id);
        this.voucherId = id;
      } else {
        this.pay_point = true;
        this.active_pay_point = true;
      }
      const merchant = this.$root.$parent.globalData.merchant;
      this.merchantId = merchant.id;
      this.shop_id = merchant.shop.id;

    }

    getTime(time) {
      time = new Date(time);

      return time.getFullYear() + '-' + this.getNumber(time.getMonth() + 1) + '-' + this.getNumber(time.getDate());
    }

    getNumber(number) {
      if (number < 10) {
        return '0' + number.toString();
      }
      return number

    }

    async fetvoucherInfo(voucherId) {
      // 同步信息
      try {
        const voucher = await request(api.voucher.replace(":id", voucherId), {
          data: {include: "activity"}
        });
        if (voucher) {
          this.hidden = true;
        }

        this.voucherName = voucher.name;
        this.descript = voucher.desc;
        this.value = voucher.value/100;

        this.price = voucher.price/100
        this.exch_points = voucher.exch_points;
        this.sum_count = voucher.sum_count
        this.pay_status = voucher.pay_type;

        this.active_count = voucher.active_count || '';

        this.activity_id = voucher.activity_id;
        this.img = root + voucher.img;
        this.is_active = voucher.is_active;

        this.voucherId = voucher.id;
        if (voucher.active_start_time) {
          this.startTime = this.getTime(voucher.active_start_time);
          this.endTime = this.getTime(voucher.active_end_time);
        }
        //活动相关数据
        if (voucher.activity!=null&&voucher.activity.enabled == 1) {
          this.active_exch_points = voucher.activity.exch_points;
          this.active_price = voucher.activity.price/100;
          this.active_pay_type = voucher.activity.pay_type;
          this.active_pay_status = voucher.activity.pay_type;
          this.active_count = voucher.activity._count;

          if(voucher.activity.start_at){
            this.active_startTime = this.getTime(voucher.activity.start_at);
            this.active_endTime = this.getTime(voucher.activity.end_at);
          }
        }
        // 刷新
        this.$wxpage.onShow();
      } catch (err) {
        console.error(err.message);
      }
    }

  }
</script>
